{"version":3,"file":"index.js","sources":["../dist-src/auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import btoa from \"btoa-lite\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function auth(state, authOptions) {\n    if (authOptions.type === \"oauth-app\") {\n        return {\n            type: \"oauth-app\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            headers: {\n                authorization: `basic ${btoa(`${state.clientId}:${state.clientSecret}`)}`,\n            },\n        };\n    }\n    if (\"factory\" in authOptions) {\n        const { type, ...options } = {\n            ...authOptions,\n            ...state,\n        };\n        // @ts-expect-error TODO: `option` cannot be never, is this a bug?\n        return authOptions.factory(options);\n    }\n    const common = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.request,\n        ...authOptions,\n    };\n    // TS: Look what you made me do\n    const userAuth = state.clientType === \"oauth-app\"\n        ? await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        })\n        : await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        });\n    return userAuth();\n}\n","import btoa from \"btoa-lite\";\nimport { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (!requiresBasicAuth(endpoint.url)) {\n        throw new Error(`[@octokit/auth-oauth-app] \"${endpoint.method} ${endpoint.url}\" does not support clientId/clientSecret basic authentication. Use @octokit/auth-oauth-user instead.`);\n    }\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    return await request(endpoint);\n}\n","export const VERSION = \"4.1.2\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createOAuthAppAuth(options) {\n    const state = Object.assign({\n        request: request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        }),\n        clientType: \"oauth-app\",\n    }, options);\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        // @ts-expect-error not worth the extra code to appease TS\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":["auth","state","authOptions","type","clientId","clientSecret","clientType","headers","authorization","btoa","options","factory","common","request","userAuth","createOAuthUserAuth","hook","route","parameters","endpoint","merge","test","url","requiresBasicAuth","Error","method","credentials","VERSION","createOAuthAppAuth","Object","assign","defaults","getUserAgent","bind"],"mappings":"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"}