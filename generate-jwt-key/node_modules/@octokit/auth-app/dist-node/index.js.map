{"version":3,"file":"index.js","sources":["../dist-src/get-app-authentication.js","../dist-src/cache.js","../dist-src/to-token-authentication.js","../dist-src/get-installation-authentication.js","../dist-src/auth.js","../dist-src/requires-app-auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { githubAppJwt } from \"universal-github-app-jwt\";\nexport async function getAppAuthentication({ appId, privateKey, timeDifference, }) {\n    const appAuthentication = await githubAppJwt({\n        id: +appId,\n        privateKey,\n        now: timeDifference && Math.floor(Date.now() / 1000) + timeDifference,\n    });\n    return {\n        type: \"app\",\n        token: appAuthentication.token,\n        appId: appAuthentication.appId,\n        expiresAt: new Date(appAuthentication.expiration * 1000).toISOString(),\n    };\n}\n","// https://github.com/isaacs/node-lru-cache#readme\nimport LRU from \"lru-cache\";\nexport function getCache() {\n    return new LRU({\n        // cache max. 15000 tokens, that will use less than 10mb memory\n        max: 15000,\n        // Cache for 1 minute less than GitHub expiry\n        maxAge: 1000 * 60 * 59,\n    });\n}\nexport async function get(cache, options) {\n    const cacheKey = optionsToCacheKey(options);\n    const result = await cache.get(cacheKey);\n    if (!result) {\n        return;\n    }\n    const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName,] = result.split(\"|\");\n    const permissions = options.permissions ||\n        permissionsString.split(/,/).reduce((permissions, string) => {\n            if (/!$/.test(string)) {\n                permissions[string.slice(0, -1)] = \"write\";\n            }\n            else {\n                permissions[string] = \"read\";\n            }\n            return permissions;\n        }, {});\n    return {\n        token,\n        createdAt,\n        expiresAt,\n        permissions,\n        repositoryIds: options.repositoryIds,\n        singleFileName,\n        repositorySelection: repositorySelection,\n    };\n}\nexport async function set(cache, options, data) {\n    const key = optionsToCacheKey(options);\n    const permissionsString = options.permissions\n        ? \"\"\n        : Object.keys(data.permissions)\n            .map((name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`)\n            .join(\",\");\n    const value = [\n        data.token,\n        data.createdAt,\n        data.expiresAt,\n        data.repositorySelection,\n        permissionsString,\n        data.singleFileName,\n    ].join(\"|\");\n    await cache.set(key, value);\n}\nfunction optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], }) {\n    const permissionsString = Object.keys(permissions)\n        .sort()\n        .map((name) => (permissions[name] === \"read\" ? name : `${name}!`))\n        .join(\",\");\n    const repositoryIdsString = repositoryIds.sort().join(\",\");\n    return [installationId, repositoryIdsString, permissionsString]\n        .filter(Boolean)\n        .join(\"|\");\n}\n","export function toTokenAuthentication({ installationId, token, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, singleFileName, }) {\n    return Object.assign({\n        type: \"token\",\n        tokenType: \"installation\",\n        token,\n        installationId,\n        permissions,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n    }, repositoryIds ? { repositoryIds } : null, singleFileName ? { singleFileName } : null);\n}\n","import { get, set } from \"./cache\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { toTokenAuthentication } from \"./to-token-authentication\";\nexport async function getInstallationAuthentication(state, options, customRequest) {\n    const installationId = Number(options.installationId || state.installationId);\n    if (!installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n    }\n    if (options.factory) {\n        const { type, factory, oauthApp, ...factoryAuthOptions } = {\n            ...state,\n            ...options,\n        };\n        // @ts-expect-error if `options.factory` is set, the return type for `auth()` should be `Promise<ReturnType<options.factory>>`\n        return factory(factoryAuthOptions);\n    }\n    const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);\n    if (!options.refresh) {\n        const result = await get(state.cache, optionsWithInstallationTokenFromState);\n        if (result) {\n            const { token, createdAt, expiresAt, permissions, repositoryIds, singleFileName, repositorySelection, } = result;\n            return toTokenAuthentication({\n                installationId,\n                token,\n                createdAt,\n                expiresAt,\n                permissions,\n                repositorySelection,\n                repositoryIds,\n                singleFileName,\n            });\n        }\n    }\n    const appAuthentication = await getAppAuthentication(state);\n    const request = customRequest || state.request;\n    const { data: { token, expires_at: expiresAt, repositories, permissions, \n    // @ts-ignore\n    repository_selection: repositorySelection, \n    // @ts-ignore\n    single_file: singleFileName, }, } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n        installation_id: installationId,\n        repository_ids: options.repositoryIds,\n        permissions: options.permissions,\n        mediaType: {\n            previews: [\"machine-man\"],\n        },\n        headers: {\n            authorization: `bearer ${appAuthentication.token}`,\n        },\n    });\n    const repositoryIds = repositories\n        ? repositories.map((r) => r.id)\n        : void 0;\n    const createdAt = new Date().toISOString();\n    await set(state.cache, optionsWithInstallationTokenFromState, {\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        singleFileName,\n    });\n    return toTokenAuthentication({\n        installationId,\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        singleFileName,\n    });\n}\n","import { Deprecation } from \"deprecation\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nexport async function auth(state, options) {\n    const { type, ...authOptions } = options;\n    switch (type) {\n        case \"app\":\n            return getAppAuthentication(state);\n        case \"oauth-app\":\n            return state.oauthApp({ type: \"oauth-app\" });\n        case \"installation\":\n            return getInstallationAuthentication(state, {\n                ...authOptions,\n                type: \"installation\",\n            });\n        // @ts-expect-error\n        case \"oauth\":\n            state.log.warn(\n            // @ts-expect-error\n            new Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n        case \"oauth-user\":\n            // @ts-expect-error TODO: infer correct auth options type based on type. authOptions should be typed as \"WebFlowAuthOptions | GitHubAppDeviceFlowAuthOptions\"\n            return state.oauthApp(authOptions);\n        default:\n            throw new Error(`Invalid auth type: ${type}`);\n    }\n}\n","const PATHS = [\n    \"/app\",\n    \"/app/hook/config\",\n    \"/app/installations\",\n    \"/app/installations/{installation_id}\",\n    \"/app/installations/{installation_id}/access_tokens\",\n    \"/app/installations/{installation_id}/suspended\",\n    \"/marketplace_listing/accounts/{account_id}\",\n    \"/marketplace_listing/plan\",\n    \"/marketplace_listing/plans\",\n    \"/marketplace_listing/plans/{plan_id}/accounts\",\n    \"/marketplace_listing/stubbed/accounts/{account_id}\",\n    \"/marketplace_listing/stubbed/plan\",\n    \"/marketplace_listing/stubbed/plans\",\n    \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"/orgs/{org}/installation\",\n    \"/repos/{owner}/{repo}/installation\",\n    \"/users/{username}/installation\",\n];\n// CREDIT: Simon Grondin (https://github.com/SGrondin)\n// https://github.com/octokit/plugin-throttling.js/blob/45c5d7f13b8af448a9dbca468d9c9150a73b3948/lib/route-matcher.js\nfunction routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((p) => p\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\nconst REGEX = routeMatcher(PATHS);\nexport function requiresAppAuth(url) {\n    return !!url && REGEX.test(url);\n}\n","import { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nimport { requiresAppAuth } from \"./requires-app-auth\";\nconst FIVE_SECONDS_IN_MS = 5 * 1000;\nfunction isNotTimeSkewError(error) {\n    return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) ||\n        error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nexport async function hook(state, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    const url = endpoint.url;\n    if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n        const { token } = await getAppAuthentication(state);\n        endpoint.headers.authorization = `bearer ${token}`;\n        let response;\n        try {\n            response = await request(endpoint);\n        }\n        catch (error) {\n            // If there's an issue with the expiration, regenerate the token and try again.\n            // Otherwise rethrow the error for upstream handling.\n            if (isNotTimeSkewError(error)) {\n                throw error;\n            }\n            // If the date header is missing, we can't correct the system time skew.\n            // Throw the error to be handled upstream.\n            if (typeof error.headers.date === \"undefined\") {\n                throw error;\n            }\n            const diff = Math.floor((Date.parse(error.headers.date) - Date.parse(new Date().toString())) /\n                1000);\n            state.log.warn(error.message);\n            state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n            const { token } = await getAppAuthentication({\n                ...state,\n                timeDifference: diff,\n            });\n            endpoint.headers.authorization = `bearer ${token}`;\n            return request(endpoint);\n        }\n        return response;\n    }\n    if (requiresBasicAuth(url)) {\n        const authentication = await state.oauthApp({ type: \"oauth-app\" });\n        endpoint.headers.authorization = authentication.headers.authorization;\n        return request(endpoint);\n    }\n    const { token, createdAt } = await getInstallationAuthentication(state, \n    // @ts-expect-error TBD\n    {}, request);\n    endpoint.headers.authorization = `token ${token}`;\n    return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\n/**\n * Newly created tokens might not be accessible immediately after creation.\n * In case of a 401 response, we retry with an exponential delay until more\n * than five seconds pass since the creation of the token.\n *\n * @see https://github.com/octokit/auth-app.js/issues/65\n */\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n    const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);\n    try {\n        return await request(options);\n    }\n    catch (error) {\n        if (error.status !== 401) {\n            throw error;\n        }\n        if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n            if (retries > 0) {\n                error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1000}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n            }\n            throw error;\n        }\n        ++retries;\n        const awaitTime = retries * 1000;\n        state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1000}s)`);\n        await new Promise((resolve) => setTimeout(resolve, awaitTime));\n        return sendRequestWithRetries(state, request, options, createdAt, retries);\n    }\n}\n","export const VERSION = \"3.4.0\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { getCache } from \"./cache\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport const createAppAuth = function createAppAuth(options) {\n    if (!options.appId) {\n        throw new Error(\"[@octokit/auth-app] appId option is required\");\n    }\n    if (!options.privateKey) {\n        throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n    }\n    if (\"installationId\" in options && !options.installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n    }\n    const log = Object.assign({\n        warn: console.warn.bind(console),\n    }, options.log);\n    const request = options.request ||\n        defaultRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const state = Object.assign({\n        request,\n        cache: getCache(),\n    }, options, options.installationId\n        ? { installationId: Number(options.installationId) }\n        : {}, {\n        log,\n        oauthApp: createOAuthAppAuth({\n            clientType: \"github-app\",\n            clientId: options.clientId || \"\",\n            clientSecret: options.clientSecret || \"\",\n            request,\n        }),\n    });\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n};\n"],"names":["getAppAuthentication","appId","privateKey","timeDifference","appAuthentication","githubAppJwt","id","now","Math","floor","Date","type","token","expiresAt","expiration","toISOString","getCache","LRU","max","maxAge","get","cache","options","cacheKey","optionsToCacheKey","result","createdAt","repositorySelection","permissionsString","singleFileName","split","permissions","reduce","string","test","slice","repositoryIds","set","data","key","Object","keys","map","name","join","value","installationId","sort","repositoryIdsString","filter","Boolean","toTokenAuthentication","assign","tokenType","getInstallationAuthentication","state","customRequest","Number","Error","factory","oauthApp","factoryAuthOptions","optionsWithInstallationTokenFromState","refresh","request","expires_at","repositories","repository_selection","single_file","installation_id","repository_ids","mediaType","previews","headers","authorization","r","auth","authOptions","log","warn","Deprecation","PATHS","routeMatcher","paths","regexes","p","c","startsWith","regex","RegExp","REGEX","requiresAppAuth","url","FIVE_SECONDS_IN_MS","isNotTimeSkewError","error","message","match","hook","route","parameters","endpoint","merge","replace","DEFAULTS","baseUrl","response","date","diff","parse","toString","requiresBasicAuth","authentication","sendRequestWithRetries","retries","timeSinceTokenCreationInMs","status","awaitTime","Promise","resolve","setTimeout","VERSION","createAppAuth","console","bind","defaultRequest","defaults","getUserAgent","createOAuthAppAuth","clientType","clientId","clientSecret"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,eAAeA,oBAAf,CAAoC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAApC,EAA4E;AAC/E,QAAMC,iBAAiB,GAAG,MAAMC,kCAAY,CAAC;AACzCC,IAAAA,EAAE,EAAE,CAACL,KADoC;AAEzCC,IAAAA,UAFyC;AAGzCK,IAAAA,GAAG,EAAEJ,cAAc,IAAIK,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,GAAL,KAAa,IAAxB,IAAgCJ;AAHd,GAAD,CAA5C;AAKA,SAAO;AACHQ,IAAAA,IAAI,EAAE,KADH;AAEHC,IAAAA,KAAK,EAAER,iBAAiB,CAACQ,KAFtB;AAGHX,IAAAA,KAAK,EAAEG,iBAAiB,CAACH,KAHtB;AAIHY,IAAAA,SAAS,EAAE,IAAIH,IAAJ,CAASN,iBAAiB,CAACU,UAAlB,GAA+B,IAAxC,EAA8CC,WAA9C;AAJR,GAAP;AAMH;;ACbD;AACA,AACO,SAASC,QAAT,GAAoB;AACvB,SAAO,IAAIC,GAAJ,CAAQ;AACX;AACAC,IAAAA,GAAG,EAAE,KAFM;AAGX;AACAC,IAAAA,MAAM,EAAE,OAAO,EAAP,GAAY;AAJT,GAAR,CAAP;AAMH;AACD,AAAO,eAAeC,GAAf,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AACtC,QAAMC,QAAQ,GAAGC,iBAAiB,CAACF,OAAD,CAAlC;AACA,QAAMG,MAAM,GAAG,MAAMJ,KAAK,CAACD,GAAN,CAAUG,QAAV,CAArB;;AACA,MAAI,CAACE,MAAL,EAAa;AACT;AACH;;AACD,QAAM,CAACb,KAAD,EAAQc,SAAR,EAAmBb,SAAnB,EAA8Bc,mBAA9B,EAAmDC,iBAAnD,EAAsEC,cAAtE,IAAyFJ,MAAM,CAACK,KAAP,CAAa,GAAb,CAA/F;AACA,QAAMC,WAAW,GAAGT,OAAO,CAACS,WAAR,IAChBH,iBAAiB,CAACE,KAAlB,CAAwB,GAAxB,EAA6BE,MAA7B,CAAoC,CAACD,WAAD,EAAcE,MAAd,KAAyB;AACzD,QAAI,KAAKC,IAAL,CAAUD,MAAV,CAAJ,EAAuB;AACnBF,MAAAA,WAAW,CAACE,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAD,CAAX,GAAmC,OAAnC;AACH,KAFD,MAGK;AACDJ,MAAAA,WAAW,CAACE,MAAD,CAAX,GAAsB,MAAtB;AACH;;AACD,WAAOF,WAAP;AACH,GARD,EAQG,EARH,CADJ;AAUA,SAAO;AACHnB,IAAAA,KADG;AAEHc,IAAAA,SAFG;AAGHb,IAAAA,SAHG;AAIHkB,IAAAA,WAJG;AAKHK,IAAAA,aAAa,EAAEd,OAAO,CAACc,aALpB;AAMHP,IAAAA,cANG;AAOHF,IAAAA,mBAAmB,EAAEA;AAPlB,GAAP;AASH;AACD,AAAO,eAAeU,GAAf,CAAmBhB,KAAnB,EAA0BC,OAA1B,EAAmCgB,IAAnC,EAAyC;AAC5C,QAAMC,GAAG,GAAGf,iBAAiB,CAACF,OAAD,CAA7B;AACA,QAAMM,iBAAiB,GAAGN,OAAO,CAACS,WAAR,GACpB,EADoB,GAEpBS,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACP,WAAjB,EACGW,GADH,CACQC,IAAD,IAAW,GAAEA,IAAK,GAAEL,IAAI,CAACP,WAAL,CAAiBY,IAAjB,MAA2B,OAA3B,GAAqC,GAArC,GAA2C,EAAG,EADzE,EAEGC,IAFH,CAEQ,GAFR,CAFN;AAKA,QAAMC,KAAK,GAAG,CACVP,IAAI,CAAC1B,KADK,EAEV0B,IAAI,CAACZ,SAFK,EAGVY,IAAI,CAACzB,SAHK,EAIVyB,IAAI,CAACX,mBAJK,EAKVC,iBALU,EAMVU,IAAI,CAACT,cANK,EAOZe,IAPY,CAOP,GAPO,CAAd;AAQA,QAAMvB,KAAK,CAACgB,GAAN,CAAUE,GAAV,EAAeM,KAAf,CAAN;AACH;;AACD,SAASrB,iBAAT,CAA2B;AAAEsB,EAAAA,cAAF;AAAkBf,EAAAA,WAAW,GAAG,EAAhC;AAAoCK,EAAAA,aAAa,GAAG;AAApD,CAA3B,EAAsF;AAClF,QAAMR,iBAAiB,GAAGY,MAAM,CAACC,IAAP,CAAYV,WAAZ,EACrBgB,IADqB,GAErBL,GAFqB,CAEhBC,IAAD,IAAWZ,WAAW,CAACY,IAAD,CAAX,KAAsB,MAAtB,GAA+BA,IAA/B,GAAuC,GAAEA,IAAK,GAFxC,EAGrBC,IAHqB,CAGhB,GAHgB,CAA1B;AAIA,QAAMI,mBAAmB,GAAGZ,aAAa,CAACW,IAAd,GAAqBH,IAArB,CAA0B,GAA1B,CAA5B;AACA,SAAO,CAACE,cAAD,EAAiBE,mBAAjB,EAAsCpB,iBAAtC,EACFqB,MADE,CACKC,OADL,EAEFN,IAFE,CAEG,GAFH,CAAP;AAGH;;AC/DM,SAASO,qBAAT,CAA+B;AAAEL,EAAAA,cAAF;AAAkBlC,EAAAA,KAAlB;AAAyBc,EAAAA,SAAzB;AAAoCb,EAAAA,SAApC;AAA+Cc,EAAAA,mBAA/C;AAAoEI,EAAAA,WAApE;AAAiFK,EAAAA,aAAjF;AAAgGP,EAAAA;AAAhG,CAA/B,EAAkJ;AACrJ,SAAOW,MAAM,CAACY,MAAP,CAAc;AACjBzC,IAAAA,IAAI,EAAE,OADW;AAEjB0C,IAAAA,SAAS,EAAE,cAFM;AAGjBzC,IAAAA,KAHiB;AAIjBkC,IAAAA,cAJiB;AAKjBf,IAAAA,WALiB;AAMjBL,IAAAA,SANiB;AAOjBb,IAAAA,SAPiB;AAQjBc,IAAAA;AARiB,GAAd,EASJS,aAAa,GAAG;AAAEA,IAAAA;AAAF,GAAH,GAAuB,IAThC,EASsCP,cAAc,GAAG;AAAEA,IAAAA;AAAF,GAAH,GAAwB,IAT5E,CAAP;AAUH;;ACRM,eAAeyB,6BAAf,CAA6CC,KAA7C,EAAoDjC,OAApD,EAA6DkC,aAA7D,EAA4E;AAC/E,QAAMV,cAAc,GAAGW,MAAM,CAACnC,OAAO,CAACwB,cAAR,IAA0BS,KAAK,CAACT,cAAjC,CAA7B;;AACA,MAAI,CAACA,cAAL,EAAqB;AACjB,UAAM,IAAIY,KAAJ,CAAU,wFAAV,CAAN;AACH;;AACD,MAAIpC,OAAO,CAACqC,OAAZ,EAAqB;AACjB,6DACOJ,KADP,GAEOjC,OAFP;AAAA,UAAM;AAAEX,MAAAA,IAAF;AAAQgD,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAN;AAAA,UAAoCC,kBAApC,6EADiB;;;AAMjB,WAAOF,OAAO,CAACE,kBAAD,CAAd;AACH;;AACD,QAAMC,qCAAqC,GAAGtB,MAAM,CAACY,MAAP,CAAc;AAAEN,IAAAA;AAAF,GAAd,EAAkCxB,OAAlC,CAA9C;;AACA,MAAI,CAACA,OAAO,CAACyC,OAAb,EAAsB;AAClB,UAAMtC,MAAM,GAAG,MAAML,GAAG,CAACmC,KAAK,CAAClC,KAAP,EAAcyC,qCAAd,CAAxB;;AACA,QAAIrC,MAAJ,EAAY;AACR,YAAM;AAAEb,QAAAA,KAAF;AAASc,QAAAA,SAAT;AAAoBb,QAAAA,SAApB;AAA+BkB,QAAAA,WAA/B;AAA4CK,QAAAA,aAA5C;AAA2DP,QAAAA,cAA3D;AAA2EF,QAAAA;AAA3E,UAAoGF,MAA1G;AACA,aAAO0B,qBAAqB,CAAC;AACzBL,QAAAA,cADyB;AAEzBlC,QAAAA,KAFyB;AAGzBc,QAAAA,SAHyB;AAIzBb,QAAAA,SAJyB;AAKzBkB,QAAAA,WALyB;AAMzBJ,QAAAA,mBANyB;AAOzBS,QAAAA,aAPyB;AAQzBP,QAAAA;AARyB,OAAD,CAA5B;AAUH;AACJ;;AACD,QAAMzB,iBAAiB,GAAG,MAAMJ,oBAAoB,CAACuD,KAAD,CAApD;AACA,QAAMS,OAAO,GAAGR,aAAa,IAAID,KAAK,CAACS,OAAvC;AACA,QAAM;AAAE1B,IAAAA,IAAI,EAAE;AAAE1B,MAAAA,KAAF;AAASqD,MAAAA,UAAU,EAAEpD,SAArB;AAAgCqD,MAAAA,YAAhC;AAA8CnC,MAAAA,WAA9C;AACd;AACAoC,MAAAA,oBAAoB,EAAExC,mBAFR;AAGd;AACAyC,MAAAA,WAAW,EAAEvC;AAJC;AAAR,MAI8B,MAAMmC,OAAO,CAAC,yDAAD,EAA4D;AACzGK,IAAAA,eAAe,EAAEvB,cADwF;AAEzGwB,IAAAA,cAAc,EAAEhD,OAAO,CAACc,aAFiF;AAGzGL,IAAAA,WAAW,EAAET,OAAO,CAACS,WAHoF;AAIzGwC,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAE,CAAC,aAAD;AADH,KAJ8F;AAOzGC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAAStE,iBAAiB,CAACQ,KAAM;AAD5C;AAPgG,GAA5D,CAJjD;AAeA,QAAMwB,aAAa,GAAG8B,YAAY,GAC5BA,YAAY,CAACxB,GAAb,CAAkBiC,CAAD,IAAOA,CAAC,CAACrE,EAA1B,CAD4B,GAE5B,KAAK,CAFX;AAGA,QAAMoB,SAAS,GAAG,IAAIhB,IAAJ,GAAWK,WAAX,EAAlB;AACA,QAAMsB,GAAG,CAACkB,KAAK,CAAClC,KAAP,EAAcyC,qCAAd,EAAqD;AAC1DlD,IAAAA,KAD0D;AAE1Dc,IAAAA,SAF0D;AAG1Db,IAAAA,SAH0D;AAI1Dc,IAAAA,mBAJ0D;AAK1DI,IAAAA,WAL0D;AAM1DK,IAAAA,aAN0D;AAO1DP,IAAAA;AAP0D,GAArD,CAAT;AASA,SAAOsB,qBAAqB,CAAC;AACzBL,IAAAA,cADyB;AAEzBlC,IAAAA,KAFyB;AAGzBc,IAAAA,SAHyB;AAIzBb,IAAAA,SAJyB;AAKzBc,IAAAA,mBALyB;AAMzBI,IAAAA,WANyB;AAOzBK,IAAAA,aAPyB;AAQzBP,IAAAA;AARyB,GAAD,CAA5B;AAUH;;ACtEM,eAAe+C,IAAf,CAAoBrB,KAApB,EAA2BjC,OAA3B,EAAoC;AACvC,QAAM;AAAEX,IAAAA;AAAF,MAA2BW,OAAjC;AAAA,QAAiBuD,WAAjB,4BAAiCvD,OAAjC;;AACA,UAAQX,IAAR;AACI,SAAK,KAAL;AACI,aAAOX,oBAAoB,CAACuD,KAAD,CAA3B;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,CAACK,QAAN,CAAe;AAAEjD,QAAAA,IAAI,EAAE;AAAR,OAAf,CAAP;;AACJ,SAAK,cAAL;AACI,aAAO2C,6BAA6B,CAACC,KAAD,oCAC7BsB,WAD6B;AAEhClE,QAAAA,IAAI,EAAE;AAF0B,SAApC;AAIJ;;AACA,SAAK,OAAL;AACI4C,MAAAA,KAAK,CAACuB,GAAN,CAAUC,IAAV;AAEA,UAAIC,uBAAJ,CAAiB,oFAAjB,CAFA;;AAGJ,SAAK,YAAL;AACI;AACA,aAAOzB,KAAK,CAACK,QAAN,CAAeiB,WAAf,CAAP;;AACJ;AACI,YAAM,IAAInB,KAAJ,CAAW,sBAAqB/C,IAAK,EAArC,CAAN;AAnBR;AAqBH;;AC1BD,MAAMsE,KAAK,GAAG,CACV,MADU,EAEV,kBAFU,EAGV,oBAHU,EAIV,sCAJU,EAKV,oDALU,EAMV,gDANU,EAOV,4CAPU,EAQV,2BARU,EASV,4BATU,EAUV,+CAVU,EAWV,oDAXU,EAYV,mCAZU,EAaV,oCAbU,EAcV,uDAdU,EAeV,0BAfU,EAgBV,oCAhBU,EAiBV,gCAjBU,CAAd;AAoBA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;;AACA;AACJ;AACA;AACA;AACI,QAAMC,OAAO,GAAGD,KAAK,CAACzC,GAAN,CAAW2C,CAAD,IAAOA,CAAC,CAC7BvD,KAD4B,CACtB,GADsB,EAE5BY,GAF4B,CAEvB4C,CAAD,IAAQA,CAAC,CAACC,UAAF,CAAa,GAAb,IAAoB,SAApB,GAAgCD,CAFhB,EAG5B1C,IAH4B,CAGvB,GAHuB,CAAjB,CAAhB,CANyB;;AAWzB;AACJ;AACA;AACA;;AACI,QAAM4C,KAAK,GAAI,OAAMJ,OAAO,CAAC1C,GAAR,CAAaiC,CAAD,IAAQ,MAAKA,CAAE,GAA3B,EAA+B/B,IAA/B,CAAoC,GAApC,CAAyC,SAA9D,CAfyB;;AAiBzB;AACJ;AACA;AACA;AACA;;AAEI,SAAO,IAAI6C,MAAJ,CAAWD,KAAX,EAAkB,GAAlB,CAAP;AACH;;AACD,MAAME,KAAK,GAAGR,YAAY,CAACD,KAAD,CAA1B;AACA,AAAO,SAASU,eAAT,CAAyBC,GAAzB,EAA8B;AACjC,SAAO,CAAC,CAACA,GAAF,IAASF,KAAK,CAACxD,IAAN,CAAW0D,GAAX,CAAhB;AACH;;AC7CD,MAAMC,kBAAkB,GAAG,IAAI,IAA/B;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,SAAO,EAAEA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,uHAApB,KACLF,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,oGAApB,CADG,CAAP;AAEH;;AACD,AAAO,eAAeC,IAAf,CAAoB3C,KAApB,EAA2BS,OAA3B,EAAoCmC,KAApC,EAA2CC,UAA3C,EAAuD;AAC1D,QAAMC,QAAQ,GAAGrC,OAAO,CAACqC,QAAR,CAAiBC,KAAjB,CAAuBH,KAAvB,EAA8BC,UAA9B,CAAjB;AACA,QAAMR,GAAG,GAAGS,QAAQ,CAACT,GAArB;;AACA,MAAID,eAAe,CAACC,GAAG,CAACW,OAAJ,CAAYvC,OAAO,CAACqC,QAAR,CAAiBG,QAAjB,CAA0BC,OAAtC,EAA+C,EAA/C,CAAD,CAAnB,EAAyE;AACrE,UAAM;AAAE7F,MAAAA;AAAF,QAAY,MAAMZ,oBAAoB,CAACuD,KAAD,CAA5C;AACA8C,IAAAA,QAAQ,CAAC5B,OAAT,CAAiBC,aAAjB,GAAkC,UAAS9D,KAAM,EAAjD;AACA,QAAI8F,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAM1C,OAAO,CAACqC,QAAD,CAAxB;AACH,KAFD,CAGA,OAAON,KAAP,EAAc;AACV;AACA;AACA,UAAID,kBAAkB,CAACC,KAAD,CAAtB,EAA+B;AAC3B,cAAMA,KAAN;AACH,OALS;AAOV;;;AACA,UAAI,OAAOA,KAAK,CAACtB,OAAN,CAAckC,IAArB,KAA8B,WAAlC,EAA+C;AAC3C,cAAMZ,KAAN;AACH;;AACD,YAAMa,IAAI,GAAGpG,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACmG,KAAL,CAAWd,KAAK,CAACtB,OAAN,CAAckC,IAAzB,IAAiCjG,IAAI,CAACmG,KAAL,CAAW,IAAInG,IAAJ,GAAWoG,QAAX,EAAX,CAAlC,IACpB,IADS,CAAb;AAEAvD,MAAAA,KAAK,CAACuB,GAAN,CAAUC,IAAV,CAAegB,KAAK,CAACC,OAArB;AACAzC,MAAAA,KAAK,CAACuB,GAAN,CAAUC,IAAV,CAAgB,wEAAuE6B,IAAK,+DAA5F;AACA,YAAM;AAAEhG,QAAAA;AAAF,UAAY,MAAMZ,oBAAoB,mCACrCuD,KADqC;AAExCpD,QAAAA,cAAc,EAAEyG;AAFwB,SAA5C;AAIAP,MAAAA,QAAQ,CAAC5B,OAAT,CAAiBC,aAAjB,GAAkC,UAAS9D,KAAM,EAAjD;AACA,aAAOoD,OAAO,CAACqC,QAAD,CAAd;AACH;;AACD,WAAOK,QAAP;AACH;;AACD,MAAIK,+BAAiB,CAACnB,GAAD,CAArB,EAA4B;AACxB,UAAMoB,cAAc,GAAG,MAAMzD,KAAK,CAACK,QAAN,CAAe;AAAEjD,MAAAA,IAAI,EAAE;AAAR,KAAf,CAA7B;AACA0F,IAAAA,QAAQ,CAAC5B,OAAT,CAAiBC,aAAjB,GAAiCsC,cAAc,CAACvC,OAAf,CAAuBC,aAAxD;AACA,WAAOV,OAAO,CAACqC,QAAD,CAAd;AACH;;AACD,QAAM;AAAEzF,IAAAA,KAAF;AAASc,IAAAA;AAAT,MAAuB,MAAM4B,6BAA6B,CAACC,KAAD;AAEhE,IAFgE,EAE5DS,OAF4D,CAAhE;AAGAqC,EAAAA,QAAQ,CAAC5B,OAAT,CAAiBC,aAAjB,GAAkC,SAAQ9D,KAAM,EAAhD;AACA,SAAOqG,sBAAsB,CAAC1D,KAAD,EAAQS,OAAR,EAAiBqC,QAAjB,EAA2B3E,SAA3B,CAA7B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeuF,sBAAf,CAAsC1D,KAAtC,EAA6CS,OAA7C,EAAsD1C,OAAtD,EAA+DI,SAA/D,EAA0EwF,OAAO,GAAG,CAApF,EAAuF;AACnF,QAAMC,0BAA0B,GAAG,CAAC,IAAIzG,IAAJ,EAAD,GAAc,CAAC,IAAIA,IAAJ,CAASgB,SAAT,CAAlD;;AACA,MAAI;AACA,WAAO,MAAMsC,OAAO,CAAC1C,OAAD,CAApB;AACH,GAFD,CAGA,OAAOyE,KAAP,EAAc;AACV,QAAIA,KAAK,CAACqB,MAAN,KAAiB,GAArB,EAA0B;AACtB,YAAMrB,KAAN;AACH;;AACD,QAAIoB,0BAA0B,IAAItB,kBAAlC,EAAsD;AAClD,UAAIqB,OAAO,GAAG,CAAd,EAAiB;AACbnB,QAAAA,KAAK,CAACC,OAAN,GAAiB,SAAQkB,OAAQ,mBAAkBC,0BAA0B,GAAG,IAAK,uNAArF;AACH;;AACD,YAAMpB,KAAN;AACH;;AACD,MAAEmB,OAAF;AACA,UAAMG,SAAS,GAAGH,OAAO,GAAG,IAA5B;AACA3D,IAAAA,KAAK,CAACuB,GAAN,CAAUC,IAAV,CAAgB,kGAAiGmC,OAAQ,WAAUG,SAAS,GAAG,IAAK,IAApJ;AACA,UAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,SAAV,CAAnC,CAAN;AACA,WAAOJ,sBAAsB,CAAC1D,KAAD,EAAQS,OAAR,EAAiB1C,OAAjB,EAA0BI,SAA1B,EAAqCwF,OAArC,CAA7B;AACH;AACJ;;AClFM,MAAMO,OAAO,GAAG,mBAAhB;;MCQMC,aAAa,GAAG,SAASA,aAAT,CAAuBpG,OAAvB,EAAgC;AACzD,MAAI,CAACA,OAAO,CAACrB,KAAb,EAAoB;AAChB,UAAM,IAAIyD,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,MAAI,CAACpC,OAAO,CAACpB,UAAb,EAAyB;AACrB,UAAM,IAAIwD,KAAJ,CAAU,mDAAV,CAAN;AACH;;AACD,MAAI,oBAAoBpC,OAApB,IAA+B,CAACA,OAAO,CAACwB,cAA5C,EAA4D;AACxD,UAAM,IAAIY,KAAJ,CAAU,4DAAV,CAAN;AACH;;AACD,QAAMoB,GAAG,GAAGtC,MAAM,CAACY,MAAP,CAAc;AACtB2B,IAAAA,IAAI,EAAE4C,OAAO,CAAC5C,IAAR,CAAa6C,IAAb,CAAkBD,OAAlB;AADgB,GAAd,EAETrG,OAAO,CAACwD,GAFC,CAAZ;AAGA,QAAMd,SAAO,GAAG1C,OAAO,CAAC0C,OAAR,IACZ6D,eAAc,CAACC,QAAf,CAAwB;AACpBrD,IAAAA,OAAO,EAAE;AACL,oBAAe,uBAAsBgD,OAAQ,IAAGM,+BAAY,EAAG;AAD1D;AADW,GAAxB,CADJ;AAMA,QAAMxE,KAAK,GAAGf,MAAM,CAACY,MAAP,CAAc;AACxBY,aAAAA,SADwB;AAExB3C,IAAAA,KAAK,EAAEL,QAAQ;AAFS,GAAd,EAGXM,OAHW,EAGFA,OAAO,CAACwB,cAAR,GACN;AAAEA,IAAAA,cAAc,EAAEW,MAAM,CAACnC,OAAO,CAACwB,cAAT;AAAxB,GADM,GAEN,EALQ,EAKJ;AACNgC,IAAAA,GADM;AAENlB,IAAAA,QAAQ,EAAEoE,+BAAkB,CAAC;AACzBC,MAAAA,UAAU,EAAE,YADa;AAEzBC,MAAAA,QAAQ,EAAE5G,OAAO,CAAC4G,QAAR,IAAoB,EAFL;AAGzBC,MAAAA,YAAY,EAAE7G,OAAO,CAAC6G,YAAR,IAAwB,EAHb;AAIzBnE,eAAAA;AAJyB,KAAD;AAFtB,GALI,CAAd;AAcA,SAAOxB,MAAM,CAACY,MAAP,CAAcwB,IAAI,CAACgD,IAAL,CAAU,IAAV,EAAgBrE,KAAhB,CAAd,EAAsC;AACzC2C,IAAAA,IAAI,EAAEA,IAAI,CAAC0B,IAAL,CAAU,IAAV,EAAgBrE,KAAhB;AADmC,GAAtC,CAAP;AAGH,CApCM;;;;;;;;;;"}