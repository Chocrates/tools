{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/utils.js","../dist-src/get-web-flow-authorization-url.js","../dist-src/exchange-web-flow-code.js","../dist-src/create-device-code.js","../dist-src/exchange-device-code.js","../dist-src/check-token.js","../dist-src/refresh-token.js","../dist-src/scope-token.js","../dist-src/reset-token.js","../dist-src/delete-token.js","../dist-src/delete-authorization.js"],"sourcesContent":["export const VERSION = \"1.2.3\";\n","import { RequestError } from \"@octokit/request-error\";\nexport function requestToOAuthBaseUrl(request) {\n    const endpointDefaults = request.endpoint.DEFAULTS;\n    return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl)\n        ? \"https://github.com\"\n        : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nexport async function oauthRequest(request, route, parameters) {\n    const withOAuthParameters = {\n        baseUrl: requestToOAuthBaseUrl(request),\n        headers: {\n            accept: \"application/json\",\n        },\n        ...parameters,\n    };\n    const response = await request(route, withOAuthParameters);\n    if (\"error\" in response.data) {\n        const error = new RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n            request: request.endpoint.merge(route, withOAuthParameters),\n            headers: response.headers,\n        });\n        // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n        error.response = response;\n        throw error;\n    }\n    return response;\n}\n","import { oauthAuthorizationUrl, } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nexport function getWebFlowAuthorizationUrl({ request = defaultRequest, ...options }) {\n    const baseUrl = requestToOAuthBaseUrl(request);\n    // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n    return oauthAuthorizationUrl({\n        ...options,\n        baseUrl,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeWebFlowCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        code: options.code,\n        redirect_uri: options.redirectUrl,\n        state: options.state,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function createDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const parameters = {\n        client_id: options.clientId,\n    };\n    if (\"scopes\" in options && Array.isArray(options.scopes)) {\n        parameters.scope = options.scopes.join(\" \");\n    }\n    return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        device_code: options.code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (\"clientSecret\" in options) {\n        authentication.clientSecret = options.clientSecret;\n    }\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function checkToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: options.token,\n        scopes: response.data.scopes,\n    };\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function refreshToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        grant_type: \"refresh_token\",\n        refresh_token: options.refreshToken,\n    });\n    const apiTimeInMs = new Date(response.headers.date).getTime();\n    const authentication = {\n        clientType: \"github-app\",\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n        refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in),\n    };\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function scopeToken(options) {\n    const { request, clientType, clientId, clientSecret, token, ...requestOptions } = options;\n    const response = await (request ||\n        /* istanbul ignore next: we always pass a custom request in tests */ defaultRequest)(\"POST /applications/{client_id}/token/scoped\", {\n        headers: {\n            authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        },\n        client_id: clientId,\n        access_token: token,\n        ...requestOptions,\n    });\n    const authentication = {\n        clientType,\n        clientId,\n        clientSecret,\n        token: response.data.token,\n    };\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function resetToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    const response = await request(\"PATCH /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.token,\n        scopes: response.data.scopes,\n    };\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteAuthorization(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/grant\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n"],"names":["VERSION","requestToOAuthBaseUrl","request","endpointDefaults","endpoint","DEFAULTS","test","baseUrl","replace","oauthRequest","route","parameters","withOAuthParameters","headers","accept","response","data","error","RequestError","error_description","error_uri","merge","getWebFlowAuthorizationUrl","defaultRequest","options","oauthAuthorizationUrl","exchangeWebFlowCode","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","state","authentication","clientType","token","access_token","scopes","scope","split","filter","Boolean","apiTimeInMs","Date","date","getTime","refreshToken","refresh_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString","createDeviceCode","Array","isArray","join","exchangeDeviceCode","device_code","grant_type","checkToken","authorization","btoa","scopeToken","requestOptions","resetToken","auth","deleteToken","deleteAuthorization"],"mappings":"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"}